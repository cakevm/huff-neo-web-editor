import * as monaco from 'monaco-editor';

export const huffLanguage: monaco.languages.IMonarchLanguage = {
  defaultToken: '',
  tokenPostfix: '.huff',

  keywords: [
    '#define',
    'macro',
    'fn',
    'test',
    'function',
    'event',
    'error',
    'constant',
    'takes',
    'returns',
    'view',
    'pure',
    'payable',
    'nonpayable',
    'indexed',
    'anonymous',
    'FREE_STORAGE_POINTER',
    '__FUNC_SIG',
    '__EVENT_HASH',
    '__ERROR',
    '__RIGHTPAD',
    '__LEFTPAD',
    '__CODECOPY_DYN_ARG',
    '__VERBATIM',
    '__BYTES',
    '__tablesize',
    '__codesize',
    '__tablestart',
  ],

  opcodes: [
    'stop',
    'add',
    'mul',
    'sub',
    'div',
    'sdiv',
    'mod',
    'smod',
    'addmod',
    'mulmod',
    'exp',
    'signextend',
    'lt',
    'gt',
    'slt',
    'sgt',
    'eq',
    'iszero',
    'and',
    'or',
    'xor',
    'not',
    'byte',
    'shl',
    'shr',
    'sar',
    'sha3',
    'keccak256',
    'address',
    'balance',
    'origin',
    'caller',
    'callvalue',
    'calldataload',
    'calldatasize',
    'calldatacopy',
    'codesize',
    'codecopy',
    'gasprice',
    'extcodesize',
    'extcodecopy',
    'returndatasize',
    'returndatacopy',
    'extcodehash',
    'blockhash',
    'coinbase',
    'timestamp',
    'number',
    'difficulty',
    'gaslimit',
    'chainid',
    'selfbalance',
    'basefee',
    'pop',
    'mload',
    'mstore',
    'mstore8',
    'sload',
    'sstore',
    'jump',
    'jumpi',
    'pc',
    'msize',
    'gas',
    'jumpdest',
    'push0',
    'push1',
    'push2',
    'push3',
    'push4',
    'push5',
    'push6',
    'push7',
    'push8',
    'push9',
    'push10',
    'push11',
    'push12',
    'push13',
    'push14',
    'push15',
    'push16',
    'push17',
    'push18',
    'push19',
    'push20',
    'push21',
    'push22',
    'push23',
    'push24',
    'push25',
    'push26',
    'push27',
    'push28',
    'push29',
    'push30',
    'push31',
    'push32',
    'dup1',
    'dup2',
    'dup3',
    'dup4',
    'dup5',
    'dup6',
    'dup7',
    'dup8',
    'dup9',
    'dup10',
    'dup11',
    'dup12',
    'dup13',
    'dup14',
    'dup15',
    'dup16',
    'swap1',
    'swap2',
    'swap3',
    'swap4',
    'swap5',
    'swap6',
    'swap7',
    'swap8',
    'swap9',
    'swap10',
    'swap11',
    'swap12',
    'swap13',
    'swap14',
    'swap15',
    'swap16',
    'log0',
    'log1',
    'log2',
    'log3',
    'log4',
    'create',
    'call',
    'callcode',
    'return',
    'delegatecall',
    'create2',
    'staticcall',
    'revert',
    'invalid',
    'selfdestruct',
  ],

  types: [
    'uint256',
    'uint128',
    'uint64',
    'uint32',
    'uint16',
    'uint8',
    'int256',
    'int128',
    'int64',
    'int32',
    'int16',
    'int8',
    'bytes32',
    'bytes16',
    'bytes8',
    'bytes4',
    'bytes2',
    'bytes1',
    'bytes',
    'string',
    'address',
    'bool',
  ],

  operators: ['=', '(', ')', '{', '}', '[', ']', '<', '>', ':', ',', '+', '-', '*', '/'],

  tokenizer: {
    root: [
      // Comments
      [/\/\/.*$/, 'comment'],
      [/\/\*/, 'comment', '@comment'],

      // Hex literals
      [/0x[0-9a-fA-F]+/, 'number.hex'],

      // Numbers
      [/\d+/, 'number'],

      // Macro invocations with arguments
      [/<\w+>/, 'variable.parameter'],

      // Labels
      [/\w+:/, 'type.identifier'],

      // Keywords, opcodes, and identifiers
      [
        /[a-zA-Z_#]\w*/,
        {
          cases: {
            '@keywords': 'keyword',
            '@opcodes': 'keyword.opcode',
            '@types': 'type',
            '@default': 'identifier',
          },
        },
      ],

      // Operators
      [/[{}()[\]]/, '@brackets'],
      [/[<>]/, 'operator'],

      // Strings
      [/"([^"\\]|\\.)*$/, 'string.invalid'],
      [/"/, 'string', '@string'],
    ],

    comment: [
      [/[^/*]+/, 'comment'],
      [/\*\//, 'comment', '@pop'],
      [/[/*]/, 'comment'],
    ],

    string: [
      [/[^\\"]+/, 'string'],
      [/\\./, 'string.escape'],
      [/"/, 'string', '@pop'],
    ],
  },
};

export const huffTheme: monaco.editor.IStandaloneThemeData = {
  base: 'vs-dark',
  inherit: true,
  rules: [
    { token: 'keyword', foreground: 'c586c0' },
    { token: 'keyword.opcode', foreground: '4ec9b0' },
    { token: 'type', foreground: '4ec9b0' },
    { token: 'type.identifier', foreground: 'dcdcaa' },
    { token: 'comment', foreground: '6a9955', fontStyle: 'italic' },
    { token: 'string', foreground: 'ce9178' },
    { token: 'number', foreground: 'b5cea8' },
    { token: 'number.hex', foreground: 'b5cea8' },
    { token: 'variable.parameter', foreground: '9cdcfe' },
  ],
  colors: {
    'editor.background': '#1e1e1e',
    'editor.foreground': '#d4d4d4',
    'editor.lineHighlightBackground': '#2a2a2a',
    'editorLineNumber.foreground': '#858585',
    'editorCursor.foreground': '#aeafad',
    'editor.selectionBackground': '#264f78',
    'editor.inactiveSelectionBackground': '#3a3d41',
  },
};
